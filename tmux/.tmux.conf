source-file "${HOME}/.tmux/themes/minimal.tmuxtheme"
set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",*256col*:Tc"
set -g set-clipboard on
set -g history-limit 20000
set-window-option -g mode-keys vi
# dont wait long for escape sequence
set -sg escape-time 20
set -g bell-action none

# send focus events (particularly to vim, so it can use an autocommand to pick up external file changes)
set -g focus-events on

# set leader to <ctrl><space>
unbind C-b
set -g prefix C-Space


is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?(-nightly)?)(diff)?$'"

is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"

# start new windows and splits in the current directory, not from the tmux working dir
bind-key '"' split-window -c "#{pane_current_path}"
bind-key %   split-window -h -c "#{pane_current_path}"
bind-key c   new-window -c "#{pane_current_path}"

bind-key h copy-mode

# toggle statusbar
bind-key b set-option status

# <cmd-k> is pressed, alacritty sends <leader>k: <C-Space>k, clear screen
bind k send-keys -R \; send-keys C-l \; clear-history

# resize panes using PREFIX H, J, K, L
bind-key -r -T prefix C-k resize-pane -U 5
bind-key -r -T prefix C-j resize-pane -D 5
bind-key -r -T prefix C-h resize-pane -L 5
bind-key -r -T prefix C-l resize-pane -R 5

# cycle windows with repeat
bind-key -r -T prefix C-n next-window
bind-key -r -T prefix C-p previous-window
# similar to vim keybind <leader><CR> to alternate buffers, I do this instead of 'prefix l' sometimes, so bind it
bind-key -r -T prefix Enter last-window

# copy to system clipboard
if-shell -b 'test $(uname) = "Linux"' 'bind -T copy-mode-vi y send-keys -X copy-pipe "xclip -in -selection clipboard"\; send-keys -X clear-selection'
if-shell -b 'test $(uname) = "Darwin"' 'bind -T copy-mode-vi y send-keys -X copy-pipe "pbcopy"\; send-keys -X clear-selection'

# https://github.com/gotbletu/shownotes/blob/master/tmux_2.4_copy_mode_vim.md
# Note: rectangle-toggle (aka Visual Block Mode) > hit v then C-v to trigger it
# bind-key p paste-buffer
bind-key P choose-buffer
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi V send-keys -X select-line
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle

# navigate panes with <C-h>, <C-j> etc, except when in vim or fzf
# pairs well with remapping <C-w>j to <C-j> in vim for consistent split navigation keys in tmux and vim

# remove useless bindings that impede pane selection in copy-mode-vi
unbind -T copy-mode-vi C-h
unbind -T copy-mode-vi C-j

bind -n C-h run "($is_vim && tmux send-keys C-h) || \
                  tmux select-pane -LZ"

bind -n C-j run "($is_vim && tmux send-keys C-j) || \
                  ($is_fzf && tmux send-keys C-j) || \
                  tmux select-pane -DZ"

bind -n C-k run "($is_vim && tmux send-keys C-k) || \
                  ($is_fzf && tmux send-keys C-k) || \
                  tmux select-pane -UZ"

bind -n C-l run "($is_vim && tmux send-keys C-l) || \
                  tmux select-pane -RZ"

# bind -n 'C-\' if-shell "$is_vim" "send-keys 'C-\\'" "select-pane -l"
bind -T prefix \; last-pane -Z

# unbind keys in current tmux session so they are passed to inner tmux sessions
# allows for nesting tmux sessions
# https://gist.github.com/samoshkin/05e65f7f1c9b55d3fc7690b59d678734
bind -T root C-a \
  set prefix None \;\
  set key-table off \;\
  if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
  refresh-client -S \;\

bind -T off C-a \
  set -u prefix \;\
  set -u key-table \;\
  refresh-client -S

